AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: yt-dl-3-hyrbid-services

Parameters:
  Region:
    Type: String
    Description: The AWS Region where the stack is being deployed
    Default: your_aws_Region
  AccountId:
    Type: String
    Description: The AWS account ID where the stack is being deployed
    Default: your_aws_account_id
    NoEcho: true
  HostedZoneId:
    Type: String
    Description: The Route 53 hosted zone ID for your domain
    Default: your_hosted_zone_id
    NoEcho: true
  DownloadsBucket:
    Type: String
    Description: The S3 bucket where the downloads are stored
    Default: yt-dl-3-downloads
  Domain:
    Type: String
    Description: The custom domain name for the API
    Default: your.custom.domain.com
    NoEcho: true
  SpotifyClientId:
    Type: String
    Description: The Spotify client ID
    Default: your_spotify_client_id
    NoEcho: true
  SpotifyClientSecret:
    Type: String
    Description: The Spotify client secret
    Default: your_spotify_client_secret
    NoEcho: true

Globals:
  Function:
    Environment:
      Variables:
        AWS_ACCOUNT_ID: !Ref AccountId
        AWS_DOWNLOADS_BUCKET: !Ref DownloadsBucket
        AWS_DOMAIN: !Ref Domain
        SPOTIFY_CLIENT_ID: !Ref SpotifyClientId
        SPOTIFY_CLIENT_SECRET: !Ref SpotifyClientSecret

Resources:
  # Logging Resources
  YTDL3Logs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - '-'
        - - !Ref YTDL3API
          - access-logs
  YTDL3CWRoleArn:
    Type: AWS::ApiGateway::Account
    Properties: 
      CloudWatchRoleArn: !GetAtt YTDL3CloudWatchRole.Arn
  YTDL3CloudWatchRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Path: /
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs'

 # S3 Bucket
  YTDL3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DownloadsBucket

  # SQS Resources
  YTDL3ConvertSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: yt-dl-3-convert
      VisibilityTimeout: 320
  YTDL3GenreSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: yt-dl-3-genre
      VisibilityTimeout: 520
  YTDL3MetaSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: yt-dl-3-meta
      VisibilityTimeout: 120

  # DynamoDB Resources
  YTDL3TrackTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: YTDL3_Tracks
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  #API
  YTDL3API:
    Type: AWS::Serverless::Api
    DependsOn: YTDL3CWRoleArn
    Properties:
      StageName: Prod
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          LoggingLevel: INFO
      AccessLogSetting:
        DestinationArn: !GetAtt YTDL3Logs.Arn
        Format: $context.extendedRequestId $context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] "$context.httpMethod $context.resourcePath $context.protocol" $context.status $context.responseLength $context.requestId
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'GET,OPTIONS,POST'"

  # Certificate
  YTDL3Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref Domain
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref Domain
          HostedZoneId: !Ref HostedZoneId

  # Custom Domain Name
  YTDL3CustomDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref Domain
      RegionalCertificateArn: !Ref YTDL3Certificate
      EndpointConfiguration:
        Types:
          - REGIONAL

  # Base Path Mapping
  YTDL3BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref YTDL3CustomDomain
      RestApiId: !Ref YTDL3API
      Stage: Prod

  # Route 53 RecordSet
  YTDL3DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref Domain
      Type: CNAME
      TTL: '60'
      ResourceRecords:
        - !GetAtt YTDL3CustomDomain.RegionalDomainName

  # Lambda Functions
  YTDL3InitiatorFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: yt-dl-lambda-go/cmd
      Handler: initiator
      Runtime: provided.al2023
      Architectures:
        - x86_64
      MemorySize: 256
      Timeout: 30
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /initiator
            Method: POST
            RestApiId: !Ref YTDL3API
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref YTDL3TrackTable
        - SQSSendMessagePolicy:
            QueueName: !GetAtt YTDL3ConvertSQS.QueueName
  YTDL3ConverterFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: yt-dl-lambda-go/cmd
      Handler: converter
      Runtime: provided.al2023
      Architectures:
        - x86_64
      MemorySize: 10240
      Timeout: 240
      Events:
        SQSMessagePublished:
          Type: SQS
          Properties:
            Queue: !GetAtt YTDL3ConvertSQS.Arn
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 2
            ScalingConfig:
              MaximumConcurrency: 100
      Policies:
        - SQSPollerPolicy:
            QueueName: !GetAtt YTDL3ConvertSQS.QueueName
        - SQSSendMessagePolicy:
            QueueName: !GetAtt YTDL3GenreSQS.QueueName
        - S3CrudPolicy:
            BucketName: !Ref DownloadsBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref YTDL3TrackTable
  YTDL3GenreFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 4096
      PackageType: Image
      ImageConfig:
        Command: ["app.lambda_handler"]
      Timeout: 500
      Events:
        SQSMessagePublished:
          Type: SQS
          Properties:
            Queue: !GetAtt YTDL3GenreSQS.Arn
            BatchSize: 10
            ScalingConfig:
              MaximumConcurrency: 100
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref DownloadsBucket
        - SQSPollerPolicy:
            QueueName: !GetAtt YTDL3GenreSQS.QueueName
        - SQSSendMessagePolicy:
            QueueName: !GetAtt YTDL3MetaSQS.QueueName
        - DynamoDBCrudPolicy:
            TableName: !Ref YTDL3TrackTable
    Metadata:
      Dockerfile: yt-dl-lambda-python/ytm-genre/ytm_genre_docker
      DockerContext: .
      DockerTag: yt-dl-3-genre-v1
  YTDL3YTMetaFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      PackageType: Image
      ImageConfig:
        Command: ["app.lambda_handler"]
      Timeout: 30
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /meta
            Method: GET
            RestApiId: !Ref YTDL3API
    Metadata:
      Dockerfile: yt-dl-lambda-python/ytm-meta/ytm_meta_docker
      DockerContext: .
      DockerTag: yt-dl-3-meta-v1
  YTDL3PlaylistFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      PackageType: Image
      ImageConfig:
        Command: ["app.lambda_handler"]
      Timeout: 30
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /playlist
            Method: GET
            RestApiId: !Ref YTDL3API
    Metadata:
      Dockerfile: yt-dl-lambda-python/ytm-playlist-track-list/ytm_playlist_track_list_docker
      DockerContext: .
      DockerTag: yt-dl-3-playlist-v1
  YTDL3MetaFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: yt-dl-lambda-go/cmd
      Handler: meta
      Runtime: provided.al2023
      Architectures:
        - x86_64
      MemorySize: 256
      Timeout: 30
      Events:
        SQSMessagePublished:
          Type: SQS
          Properties:
            Queue: !GetAtt YTDL3MetaSQS.Arn
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 2
            ScalingConfig:
              MaximumConcurrency: 25
      Policies:
        - SQSPollerPolicy:
            QueueName: !GetAtt YTDL3MetaSQS.QueueName
        - DynamoDBCrudPolicy:
            TableName: !Ref YTDL3TrackTable
        - S3CrudPolicy:
            BucketName: !Ref DownloadsBucket
  YTDL3StatusFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: yt-dl-lambda-go/cmd
      Handler: status
      Runtime: provided.al2023
      Architectures:
        - x86_64
      MemorySize: 256
      Timeout: 30
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /status
            Method: GET
            RestApiId: !Ref YTDL3API
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref YTDL3TrackTable